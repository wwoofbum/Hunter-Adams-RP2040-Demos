// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ----- //
// pacer //
// ----- //

#define pacer_wrap_target 0
#define pacer_wrap 3
#define pacer_pio_version 0

static const uint16_t pacer_program_instructions[] = {
            //     .wrap_target
    0x6020, //  0: out    x, 32
    0x0041, //  1: jmp    x--, 1
    0x20c2, //  2: wait   1 irq, 2
    0xc003, //  3: irq    nowait 3
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program pacer_program = {
    .instructions = pacer_program_instructions,
    .length = 4,
    .origin = -1,
    .pio_version = pacer_pio_version,
#if PICO_PIO_VERSION > 0
    .used_gpio_ranges = 0x0
#endif
};

static inline pio_sm_config pacer_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + pacer_wrap_target, offset + pacer_wrap);
    return c;
}

static inline void pacer_program_init(PIO pio, uint sm, uint offset) {
   pio_sm_config c = pacer_program_get_default_config(offset);
   sm_config_set_out_shift(&c, 1, 1, 32) ;
   pio_sm_init(pio, sm, offset, &c);
}

#endif

